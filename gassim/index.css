:root {
  --light-grey: rgba(0,0,0,.1);
  --grey: rgba(0,0,0,.5);
  --dark-grey: rgba(0,0,0,.9);
  --light-green: rgba(128,255,128,.4);
  --border: 1px solid var(--grey);
  --hover-button: linear-gradient(0deg, var(--light-grey), white);
  --selected-button: linear-gradient(0deg, var(--light-green), white);
  --cursor-circle-inactive: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" style="font-size: 64px;opacity:.5"><text style="fill:blue" y="48" >‚óå</text></svg>') 32 32,auto;
  --cursor-circle: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" style="font-size: 64px;"><text style="fill:blue" y="48">‚óå</text></svg>') 32 32,auto;
  --cursor-fire-inactive: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" style="font-size: 64px;opacity:.5"><text style="fill:blue;" y="54">üî•</text></svg>') 32 32,auto;
  --cursor-fire: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" style="font-size: 64px;"><text style="fill:blue" y="54">üî•</text></svg>') 32 32,auto;
  --cursor-snow-inactive: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" style="font-size: 64px;opacity:.5"><text style="fill:blue" y="48">‚ùÑ</text></svg>') 32 32,auto;
  --cursor-snow: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" style="font-size: 64px;"><text style="fill:blue" y="48">‚ùÑ</text></svg>') 32 32,auto;
}

/* Global stuff */
input[type=checkbox], input[type=radio] {
  display: none;
}
form {
  margin: 0;
}
* {
  box-sizing: border-box;
}

/* layout */
body {
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-wrap: wrap;
  font-family: sans-serif;
}
body>* {
  margin-bottom: 1rem;
}

canvas {
  border: var(--border);
}
.controls {
  position: relative;
  box-sizing: border-box;
  max-width: 21rem;

  display: flex;
  flex-direction: column;
}

/* Tab controls */
.tab-bar {
  border-bottom: var(--border);
  white-space: nowrap;
}
.tab-bar>label {
  font-size: 2rem;
  border: var(--border);
  margin-bottom: -1px;
  cursor: pointer;
  padding: 0 .7rem;
}
.tab-bar>label:hover {
  background: var(--hover-button);
}
.tab {
  flex-grow: 1;
  border:var(--border);
  border-top: 0px;

  display: none;
  flex-direction: column;
  padding: 1rem;
}
input#setupTab:checked ~ .controls>.tab-bar>label[for=setupTab],
input#addTab:checked ~ .controls>.tab-bar>label[for=addTab],
input#heatTab:checked ~ .controls>.tab-bar>label[for=heatTab]
{
  border-bottom: 1px solid white;
}
input#setupTab:checked ~ .controls>.tab.setup,
input#addTab:checked ~ .controls>.tab.add,
input#heatTab:checked ~ .controls>.tab.heat
{
  display: flex;
}

/* within a tab */
.tab>label {
  display: grid;
  grid-template-columns: 50% 50%;
  margin-bottom: .3rem;
}
.tab>label>input {
  width: 5rem;
}
.tab>.spacer {
  flex-grow: 1;
  margin: .5rem;
}
.tab>.descr {
  font: italic .9rem sans-serif;
  border-top: var(--border);
  padding-top: .5rem;
}

/* The setup tab */
.tab.setup>button {
  margin: 1rem auto;
}

/* The Add tab */
#addTab:checked ~ canvas {
  cursor: var(--cursor-circle-inactive);
}
#addTab:checked ~ canvas:active {
  cursor: var(--cursor-circle);
}
.tab.add>.mode {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
}
.tab.add>.mode label {
  border: var(--border);
  cursor: pointer;
  padding: .2rem 1rem;
}
.tab.add>.mode label:hover {
  background: var(--hover-button);
}
.tab.add>.mode input[type=radio]:checked + label {
  background: var(--selected-button);
}

/* The Heat tab */
#heatTab:checked ~ canvas {
  cursor: var(--cursor-fire-inactive);
}
#heatTab:checked ~ canvas:active {
  cursor: var(--cursor-fire);
}
#heatTab:checked ~ canvas.cold {
  cursor: var(--cursor-snow-inactive);
}
#heatTab:checked ~ canvas.cold:active {
  cursor: var(--cursor-snow);
}

/* The play/pause button */
#play + label {
  position: absolute;
  bottom:0;
  right:100%;
  width: 50px;
  height: 50px;
  border: var(--border);
  cursor: pointer;
  display: flex;
  flex-direction: column;
  justify-content: center;
  font-size: 2rem;
  background-color: white;
}
#play + label:hover {
  background: var(--hover-button);
}
#play + label::before {
  content: '‚ñ∂';
  text-align: center;
  position: relative;
  top: -.2rem;
  right: -.2rem;
  text-shadow: 0 0 3px var(--grey);
}
#play:checked + label::before {
  content: '‚è∏';
  top: 0;
  right: 0;
}
.wall-control {
  margin:1em;
}
